using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplicationtestingforeverything
{

    class Program
    {
        public struct Rectangle
        {
            public int Width { get; set; }
            public int Height { get; set; }

            public Rectangle(int w, int h) : this()
            {
                Width = w; Height = h;
            }

            public void Draw()
            {
                for (int i = 0; i < Height; i++)
                {
                    for (int j = 0; j < Width; j++)
                    {
                        Console.Write("*");
                    }
                    Console.WriteLine();
                }
            }

            public override string ToString()
            {
                return string.Format("[Width = {0}; Height = {1}]",
                  Width, Height);
            }

            public static implicit operator Rectangle(Square s)
            {
                Rectangle r = new Rectangle();
                r.Height = s.Length;

                // Assume the length of the new Rectangle with
                // (Length x 2)
                r.Width = s.Length * 2;
                return r;
            }

        }
        public struct Square
        {
            public int Length { get; set; }

            public Square(int l) : this()
            {
                Length = l;
            }

            public void Draw()
            {
                for (int i = 0; i < Length; i++)
                {
                    for (int j = 0; j < Length; j++)
                    {
                        Console.Write("*");
                    }
                    Console.WriteLine();
                }
            }

            public override string ToString()
            { return string.Format("[Length = {0}]", Length); }

            #region Conversion operations
            // Rectangles can be explicitly converted
            // into Squares.
            public static explicit operator Square(Rectangle r)
            {
                Square s = new Square();
                s.Length = r.Height;
                return s;
            }

            public static explicit operator Square(int sideLength)
            {
                Square newSq = new Square();
                newSq.Length = sideLength;
                return newSq;
            }

            public static explicit operator int(Square s)
            { return s.Length; }
            #endregion
        }
        static void Main(string[] args)
        {
           

        }
    }
}
